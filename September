<----------------------------------------------------------------------01/09/2024---------------------------------------------------------------------------------->
53. Maximum Subarray on leetcode(Using Kadane's algo):
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n=nums.size();
        int sum=0;
        int curr=nums[0];
        for(int i=0;i<n;i++)
        {
            sum=sum+nums[i];
            if (sum>curr)
            {
                curr = sum;
            }
            if(sum<0)
            {
                sum=0;
            }
        }
        return curr;
    }
};
<----------------------------------------------------------------------02/09/2024---------------------------------------------------------------------------------->
11. Container With Most Water
class Solution {
public:
    int maxArea(vector<int>& height) {
        int max=0,l=0,r=height.size()-1,cur=0;
        while(l<r)
        {
            if(height[l]<height[r])
            {
                cur=(r-l)*height[l];
                l++;
            }
            else
            {
                cur=(r-l)*height[r];
                r--;
            }
            if(cur>max)
            {
                max=cur;
            }
        }
        return max;
    }
};
<----------------------------------------------------------------------03/09/2024---------------------------------------------------------------------------------->
